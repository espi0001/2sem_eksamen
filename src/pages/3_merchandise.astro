---
import "../styles/style.css";
import MainLayout from "../layouts/MainLayout.astro";
import Header2 from "../components/Header2.astro";
import Produkt from "../components/Produkt.astro";
import Filter from "../components/Filter.astro";

const apiUrl = "https://orihtpvviiwcpmwzboqr.supabase.co/rest/v1/ekamen";
const apiKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9yaWh0cHZ2aWl3Y3Btd3pib3FyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYzNjY0NzEsImV4cCI6MjAzMTk0MjQ3MX0.D3VmybLu_cJTAhpmkfHnKtssujUzP4qg3XDV1owo6Cw";

// Fetch data from Supabase ordered by the saved shuffled order
let data = [];
try {
  const response = await fetch(apiUrl, {
    method: "GET",
    headers: {
      apikey: apiKey,
    },
  });

  console.log("Response status:", response.status); // Debugging: Check response status
  data = await response.json();
  console.log("Fetched data:", data); // Debugging: Log fetched data

  if (!Array.isArray(data)) {
    throw new Error("Fetched data is not an array");
  }
} catch (error) {
  console.error("Error fetching or processing data:", error);
  data = []; // Ensure data is an empty array in case of error
}
---

<MainLayout title="Barselona | Merchandise">
  <section class="hero_items">
    <Header2 header1="Merchandise" />
  </section>
  <section class="filter_ting">
    <div class="lyt2">
      <img src="/iconer2/filter.svg" alt="Filter Icon" />
      <p>Filtrer og Sot√©r</p>
    </div>
    <div class="filter_produkter">
      <Filter />

      <p>31 PRODUKTER</p>
    </div>
  </section>

  <section>
    <article class="produkter">
      {data.length > 0 ? data.map((product) => <Produkt id={product.id} images={product.image} name={product.name} type2={product.type2} price={product.price} />) : <p>No products available.</p>}
    </article>
  </section>
</MainLayout>

<style>
  .hero_items {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 80px;
  }

  .produkter {
    display: grid;
    grid-template-columns: 1fr 1fr;
    justify-content: center;
    gap: 22px;
  }
  .filter_ting {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .filter_ting p {
    font-size: var(--font_size_small);
  }
  .filter_produkter {
    display: flex;
    justify-content: space-between;
    gap: 16px;
  }
  .lyt2 {
    display: flex;
    text-transform: uppercase;
    gap: 8px;
  }
  .lyt2 img {
    max-width: 20px;
    align-self: center;
  }
  .lyt2 p:hover {
    color: var(--color_blue);
  }

  /* Tablet */
  @media screen and (min-width: 768px) {
    h1 {
      text-align: start;
    }

    .breadcrumb_button {
      justify-content: space-between;
    }

    .produkter {
      grid-template-columns: 1fr 1fr 1fr;
      gap: 32px;
    }
  }

  /* Desktop */
  @media screen and (min-width: 1024px) {
    .hero_items {
      padding-top: 125px;
    }
    .produkter {
      grid-template-columns: 1fr 1fr 1fr 1fr;
    }
  }
</style>
