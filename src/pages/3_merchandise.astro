---
// Import necessary styles and components
import "../styles/style.css";
import MainLayout from "../layouts/MainLayout.astro";
import Button from "../components/Button.astro";
import Header2 from "../components/Header2.astro";
import Produkt from "../components/Produkt.astro";
import Breadcrumb2 from "../components/Breadcrumb2.astro";

// Supabase endpoint and API key
const apiUrl = "https://orihtpvviiwcpmwzboqr.supabase.co/rest/v1/ekamen";
const apiKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9yaWh0cHZ2aWl3Y3Btd3pib3FyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYzNjY0NzEsImV4cCI6MjAzMTk0MjQ3MX0.D3VmybLu_cJTAhpmkfHnKtssujUzP4qg3XDV1owo6Cw";

// Fetch data from Supabase
const response = await fetch(apiUrl, {
  method: "GET",
  headers: {
    apikey: apiKey,
  },
});
let data = await response.json();

// Function to shuffle array elements
function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

// Shuffle the data array
data = shuffleArray(data);
---

<MainLayout title="Merchandise">
  <section>
    <Header2 header1="Merchandise" text="" />
    <article class="breadcrumb_button">
      <Breadcrumb2 navn1="TÃ¸j" navn2="Accessories" navn3="Musik" navn4="Poster" />
      <Button style="secondary">Se alle</Button>
    </article>
  </section>

  <section class="produkter">
    {data.map((product) => <Produkt images={product.image} name={product.name} type2={product.type2} price={product.price} />)}
  </section>
</MainLayout>

<style>
  .breadcrumb_button {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .produkter {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 32px;
    margin-top: 32px;
  }
  /* ___________________________ TABLET  ___________________________*/
  /* Styles for tablets (min-width: 768px) */
  @media screen and (min-width: 768px) {
    .produkter {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Maximum of four columns */
      gap: 32px;
      justify-content: center;
    }
  }

  /* ___________________________ DESKTOP  ___________________________*/
  /* Styles for desktops (min-width: 1024px) */
  @media screen and (min-width: 1024px) {
    .produkter {
      display: grid;
      grid-template-columns: repeat(4, 1fr); /* Four columns */
      gap: 32px;
      justify-content: center;
    }
  }
</style>
